
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//IPАдресКлиента
	////ВремяЗавершенияСпящегоСеанса
	////ВремяЗасыпанияПассивногоСеанса
	//ВремяНачала
	//ВремяПоследнейАктивности
	////ДлительностьВызововВсего
	////ДлительностьВызововЗа5Мин
	////ДлительностьВызововСервисаТекущее
	////ДлительностьВызововСервисовВсего
	////ДлительностьВызововСервисовЗа5Мин
	////ДлительностьВызововСУБДВсего
	////ДлительностьВызововСУБДЗа5Мин
	////ДлительностьВызововСУБДТекущее
	////ДлительностьВызововТекущее
	//ИдентификаторИнформационнойБазы
	//ИдентификаторПроцесса
	//ИдентификаторСеанса
	//ИдентификаторСоединения
	//ИмяКомпьютера
	//ИмяПользователя
	//ИмяПриложения
	//ИмяТекущегоСервиса
	////КодЯзыка
	////КоличествоВызововВсего
	////КоличествоВызововЗа5Мин
	//Лицензии
	////НомерСеанса
	////НомерСеансаБлокирующегоСУБД
	////НомерСеансаВыполнившегоУправляемуюБлокировку
	////ОбъемДанныхЗаписанныхНаДискВсего
	////ОбъемДанныхЗаписанныхНаДискЗа5Мин
	////ОбъемДанныхЗаписанныхНаДискТекущее
	////ОбъемДанныхПереданныхИПолученныхКлиентом
	////ОбъемДанныхПереданныхИПолученныхКлиентомЗа5Мин
	////ОбъемДанныхПереданныхИПолученныхСУБДВсего
	////ОбъемДанныхПереданныхИПолученныхСУБДЗа5Мин
	////ОбъемДанныхСчитанныхСДискаВсего
	////ОбъемДанныхСчитанныхСДискаЗа5Минут
	////ОбъемДанныхСчитанныхСДискаТекущее
	////ПотреблениеПамятиВсего
	////ПотреблениеПамятиЗа5Мин
	////ПотреблениеПамятиТекущее
	////ПроцессорноеВремяВсего
	////ПроцессорноеВремяЗа5Мин
	////ПроцессорноеВремяТекущее
	////РазделениеДанных
	//СоединениеСУБД
	//СпящийСеанс  
	
	//УстановитьТаблицуПользователей();
	
КонецПроцедуры  

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыполнитьЗаполнениеПользователей();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуПользователей()
	
	ТаблицаПользователейИБ = Справочники.ИнформационныеБазы.ПолучитьТаблицуПользователей(Объект.Ссылка);
	ТаблицаПользователей.Загрузить(ТаблицаПользователейИБ);

КонецПроцедуры

&НаСервере
Процедура ДобавитьЗначенияВТаблицу(ТаблицаИндексовКартинок, ИмяПриложения, ИндексКартинки)

	НоваяСтрока = ТаблицаИндексовКартинок.Добавить();
	НоваяСтрока.ИмяПриложения = ИмяПриложения;
	НоваяСтрока.ИндексКартинки = ИндексКартинки;

КонецПроцедуры


&НаКлиенте
Асинх Процедура ТаблицаСоединенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;                                
	ПользовательИБ = Неопределено;
	ТекущиеДанные = Элементы.ТаблицаПользователей.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено 
		Или Не ЗначениеЗаполнено(ТекущиеДанные.ПользовательИБ) Тогда
		НезарегестрированныйПользователь = НезарегестрированныйПользователь(ТекущиеДанные.ИмяПользователя); 
		Если ТипЗнч(НезарегестрированныйПользователь) = Тип("СписокЗначений") Тогда
			Если НезарегестрированныйПользователь.Количество() = 0 Тогда
				Возврат;	
			ИначеЕсли НезарегестрированныйПользователь.Количество() = 1 Тогда
				ПользовательИБ = НезарегестрированныйПользователь[0].Значение;
			Иначе
				ОжиданиеВыбора = ВыбратьИзСпискаАсинх(НезарегестрированныйПользователь);
				Результат = Ждать ОжиданиеВыбора;
				ПользовательИБ = Результат.Значение;
			КонецЕсли;
		Иначе
			ПользовательИБ = НезарегестрированныйПользователь;	
		КонецЕсли;
	Иначе
		ПользовательИБ = ТекущиеДанные.ПользовательИБ;
	КонецЕсли;
	
	Если ПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ПользователиИБ.Форма.ФормаЭлемента", Новый Структура("Ключ", ПользовательИБ));
	
КонецПроцедуры

&НаСервере
Функция НезарегестрированныйПользователь(ИмяПользователя)
	
	ПользователиИБ = Справочники.ПользователиИБ.НайтиПоРеквизиту("ПолноеИмя", СокрЛП(ИмяПользователя));   
	Если ЗначениеЗаполнено(ПользователиИБ) Тогда
		Возврат ПользователиИБ;
	КонецЕсли;
	
	МассивЧастейИмени = СтрРазделить(ИмяПользователя, " ");
	ЧастьИмени = МассивЧастейИмени[0];
	
	ВхождениеФамилииПоиска = СтрНайтиПоРегулярномуВыражению(ЧастьИмени, "[А-Я][а-я]*");
	Если ВхождениеФамилииПоиска.Значение <> "" Тогда
		ЧастьИмени = ВхождениеФамилииПоиска.Значение;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ПользователиИБ.Ссылка КАК Ссылка,
					|	ПользователиИБ.ПолноеИмя КАК ПолноеИмя
					|ИЗ
					|	Справочник.ПользователиИБ КАК ПользователиИБ
					|ГДЕ
					|	(ПользователиИБ.ПолноеИмя ПОДОБНО &ЧастьИмени
					|			ИЛИ ПользователиИБ.Наименование ПОДОБНО &ЧастьИмени)";
	
	Запрос.УстановитьПараметр("ЧастьИмени", "%" + ЧастьИмени + "%");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
    
	СписокПодобных = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		
		КраткоеИмя = ПользователиСлужебныйКлиентСервер.ПолучитьКраткоеИмяПользователяИБ(Выборка.ПолноеИмя);
		
		Если КраткоеИмя = ИмяПользователя Тогда
			СписокПодобных.Добавить(Выборка.Ссылка);						
		КонецЕсли;
	КонецЦикла;

	Возврат СписокПодобных;	
	
КонецФункции


&НаКлиенте
Процедура ЗавершитьСеанс(Команда)
	
	МассивИдентификаторовСеансов = Новый Массив;
	Для Каждого ИдентификаторСтроки Из Элементы.ТаблицаПользователей.ВыделенныеСтроки Цикл
		ВыделеннаяСтрока = ТаблицаПользователей.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ЗначениеЗаполнено(ВыделеннаяСтрока.ИдентификаторСеанса) Тогда
			МассивИдентификаторовСеансов.Добавить(ВыделеннаяСтрока.ИдентификаторСеанса);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИдентификаторовСеансов.Количество() > 0 Тогда
		ЗавершитьСеансНаСервере(МассивИдентификаторовСеансов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьСеансНаСервере(МассивИдентификаторовСеансов)
	
	АдминистрированиеЭлементовКластера.ЗавершитьСеансыИнформационнойБазы(Объект.Ссылка, МассивИдентификаторовСеансов);
	ОбновитьТаблицуПользователей();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьТаблицуПользователей();
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьВсеСеансыНаСервере()

	АдминистрированиеЭлементовКластера.ЗавершитьСеансыИнформационнойБазы(Объект.Ссылка);
	ОбновитьТаблицуПользователей();

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВсеСеансы(Команда)  
	
	ЗавершитьВсеСеансыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьСпящиеСеансыНаСервере()

	АдминистрированиеЭлементовКластера.ЗавершитьСеансыИнформационнойБазы(Объект.Ссылка, , Истина);
	ОбновитьТаблицуПользователей();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСпящиеСеансы(Команда)
	ЗавершитьСпящиеСеансыНаСервере();
КонецПроцедуры


#Область ДлительныеОперации

&НаКлиенте
Процедура ВыполнитьЗаполнениеПользователей()
	
	ДлительнаяОперация = НачатьПолучениеСеансовПользователей();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатПолученияСвойств", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция НачатьПолучениеСеансовПользователей()
	
	ОтобразитьДлительныеОперацииПолученияСеансов(Истина);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.КлючФоновогоЗадания		= УникальныйИдентификатор;
	ПараметрыВыполнения.ОжидатьЗавершение			= 0;
	ПараметрыВыполнения.ЗапуститьВФоне				= Истина;
	
	Результат = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
												"Справочники.ИнформационныеБазы.ПолучитьТаблицуПользователей",
												Объект.Ссылка);

	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатПолученияСвойств(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		УстановитьТаблицуПользователей(Результат.АдресРезультата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТаблицуПользователей(АдресРезультата)

	ТаблицаСеансовПользователей = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ЗначениеЗаполнено(ТаблицаСеансовПользователей) Тогда
		ТаблицаПользователей.Загрузить(ТаблицаСеансовПользователей);
	КонецЕсли;	
	
	ОтобразитьДлительныеОперацииПолученияСеансов(Ложь);

КонецПроцедуры // УстановитьТаблицуПользователей()


&НаСервере
Процедура ОтобразитьДлительныеОперацииПолученияСеансов(ОтобразитьСтраницуОжидания)

	Если ОтобразитьСтраницуОжидания Тогда
		Элементы.СтраницыПользователей.ТекущаяСтраница = Элементы.СтраницаОжидание;
	Иначе
		Элементы.СтраницыПользователей.ТекущаяСтраница = Элементы.СтраницаПользователи;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти