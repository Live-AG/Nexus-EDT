 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ЗначенияЗаполнения); 
	КоличествоДнейИспользования = 1;
	
	Если ЗначениеЗаполнено(Параметры.Кластер1С) Тогда
		Объект.Владелец = Параметры.Кластер1С;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		Элементы.Кластер1С.Видимость = Ложь;
	Иначе
		Элементы.Кластер1СПредставление.Видимость = Ложь;
	КонецЕсли;
	
	Объект.Проект = Параметры.Проект;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Модифицированность = Ложь;
	ПриЗакрытииПомощника(Отказ);

КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриЗакрытииПомощника(Отказ)
	
	ОжиданиеОтветаНаВопрос = ВопросАсинх("Закрыть помощник создания информационной базы?", РежимДиалогаВопрос.ДаНет, , , , );
	
	Результат = Ждать ОжиданиеОтветаНаВопрос;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Отказ = Ложь;
	Иначе
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхБазыПриИзменении(Элемент)
	
	МассивСтраниц = Новый Массив;
	МассивСтраниц.Добавить("ГруппаПустаяБаза");
	МассивСтраниц.Добавить("ГруппаКопияБазы");
	МассивСтраниц.Добавить("ГруппаНоваяБаза");
	МассивСтраниц.Добавить("ГруппаДемоБаза");
	
	ИмяТекущейСтраницы = МассивСтраниц[ИсточникДанныхБазы];
	Элементы.СтраницыВыбораИсточника.ТекущаяСтраница = Элементы[ИмяТекущейСтраницы];

	Элементы.КопияБазы.Доступность			= (ИсточникДанныхБазы = 1);
	Элементы.Конфигурация.Доступность		= (ИсточникДанныхБазы = 2);
	Элементы.КонфигурацияДемо.Доступность	= (ИсточникДанныхБазы = 3);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьПараметровИсточника()
	
	Элементы.КопияБазы.Доступность			= (ИсточникДанныхБазы = 1);
	Элементы.Конфигурация.Доступность		= (ИсточникДанныхБазы = 2);
	Элементы.КонфигурацияДемо.Доступность	= (ИсточникДанныхБазы = 3);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхБазыПустаяБазаПриИзменении(Элемент)
	
	УстановитьДоступностьПараметровИсточника();

КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхБазыКопияБазыПриИзменении(Элемент)
	
	УстановитьДоступностьПараметровИсточника();

КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхБазыНоваяБазаПриИзменении(Элемент)
	
	УстановитьДоступностьПараметровИсточника();

КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхБазыДемоБазаПриИзменении(Элемент)
	
	УстановитьДоступностьПараметровИсточника();

КонецПроцедуры


&НаКлиенте
Процедура ОсновныеПараметрыДалее(Команда)
	
	Элементы.СтраницыШагов.ТекущаяСтраница = Элементы.ДополнительныеПараметры;

КонецПроцедуры


&НаКлиенте
Процедура ДополнительныеПараметрыДалее(Команда)
	
	Элементы.СтраницыШагов.ТекущаяСтраница = Элементы.СтраницаПостЗаполнения;
	
КонецПроцедуры


&НаКлиенте
Процедура ДополнительныеПараметрыНазад(Команда)
	
	Элементы.СтраницыШагов.ТекущаяСтраница = Элементы.ОсновныеПараметры;

КонецПроцедуры


&НаКлиенте
Процедура ПостЗаполнениеНазад(Команда)
	
	Элементы.СтраницыШагов.ТекущаяСтраница = Элементы.ДополнительныеПараметры;

КонецПроцедуры

&НаКлиенте
Процедура ПостЗаполнениеДалее(Команда)

//	Если ИсточникДанныхБазы = 0 И Объект.ВебСерверы.Количество() = 0 Тогда
//		Элементы.СтраницыСценарииПусто.ТекущаяСтраница = Элементы.ПустойСценарий;
//	Иначе
//		ЗаполнитьСтрокиСценария();
//		Элементы.СтраницыСценарииПусто.ТекущаяСтраница = Элементы.Сценарий;
//	КонецЕсли;
	
	Если ИсточникДанныхБазы = 0 Тогда
		Сценарий = ПредопределенноеЗначение("Справочник.Сценарий.СозданиеПустойИнформационнойБазы");
	ИначеЕсли ИсточникДанныхБазы = 1 Тогда
		Сценарий = ПредопределенноеЗначение("Справочник.Сценарий.СозданиеКопииИнформационнойБазы");
	ИначеЕсли ИсточникДанныхБазы = 2 Тогда
		Сценарий = ПредопределенноеЗначение("Справочник.Сценарий.СозданиеДемоБазы");
	ИначеЕсли ИсточникДанныхБазы = 3 Тогда
		Сценарий = ПредопределенноеЗначение("Справочник.Сценарий.СозданиеНовойИнформационнойБазы");
	КонецЕсли;
	
	ЗаполнитьСтрокиСценария();
	
	Элементы.СтраницыСценарииПусто.ТекущаяСтраница = Элементы.Сценарий;
	
	Элементы.СтраницыШагов.ТекущаяСтраница = Элементы.СтраницаСценария;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиСценария()

	ТаблицаСценария.Очистить();

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	СценарийТаблицаСкриптов.Скрипт КАК СкриптСценария,
					|	СценарийТаблицаСкриптов.Скрипт.Описание КАК ОписаниеДействия
					|ИЗ
					|	Справочник.Сценарий.ТаблицаСкриптов КАК СценарийТаблицаСкриптов
					|ГДЕ
					|	СценарийТаблицаСкриптов.Ссылка = &Ссылка
					|
					|УПОРЯДОЧИТЬ ПО
					|	СценарийТаблицаСкриптов.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Сценарий);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НомерШага = 1;
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаСценария = ТаблицаСценария.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСценария, Выборка);
		НоваяСтрокаСценария.НомерШага = НомерШага;

		НомерШага = НомерШага + 1;	
	КонецЦикла;

//	Если ИсточникДанныхБазы = 1 Тогда
//		
//		НоваяСтрокаСценария = ТаблицаСценария.Добавить();
//		НоваяСтрокаСценария.НомерШага = 1;
//		НоваяСтрокаСценария.СкриптСценария = Справочники.Скрипты.ВыгрузитьБазуВФайл;
//		НоваяСтрокаСценария.ОписаниеДействия = Справочники.Скрипты.ВыгрузитьБазуВФайл.Описание;
//			
//		НоваяСтрокаСценария = ТаблицаСценария.Добавить();
//		НоваяСтрокаСценария.НомерШага = 2;
//		НоваяСтрокаСценария.СкриптСценария = Справочники.Скрипты.ЗагрузитьБазуИзФайла;
//		НоваяСтрокаСценария.ОписаниеДействия = Справочники.Скрипты.ЗагрузитьБазуИзФайла.Описание;
//		
//	ИначеЕсли ИсточникДанныхБазы = 2 Тогда
//		
//		НоваяСтрокаСценария = ТаблицаСценария.Добавить();
//		НоваяСтрокаСценария.НомерШага = 1;
//		НоваяСтрокаСценария.СкриптСценария = Справочники.Скрипты.ЗагрузитьКонфигурацию;
//		НоваяСтрокаСценария.ОписаниеДействия = Справочники.Скрипты.ЗагрузитьКонфигурацию.Описание;
//	
//	ИначеЕсли ИсточникДанныхБазы = 3 Тогда
//		
//		НоваяСтрокаСценария = ТаблицаСценария.Добавить();
//		НоваяСтрокаСценария.НомерШага = 1;
//		НоваяСтрокаСценария.СкриптСценария = Справочники.Скрипты.ЗагрузитьБазуИзФайла;
//		НоваяСтрокаСценария.ОписаниеДействия = Справочники.Скрипты.ЗагрузитьБазуИзФайла.Описание;
//		
//	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОчиститьНажатие(Элемент)
	
	КоличествоДнейИспользования = 0;
	ОтобразитьДнейИспользования();

КонецПроцедуры

&НаКлиенте
Процедура СценарииНазад(Команда)
	
	Элементы.СтраницыШагов.ТекущаяСтраница = Элементы.СтраницаПостЗаполнения;

КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяПоНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыВыбораДаты = Новый Структура("НачальноеЗначение", Объект.ИспользуетсяПо);
	ОткрытьФорму("ОбщаяФорма.ВыборДаты", ПараметрыВыбораДаты, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборДаты") Тогда
		
		Если ВыбранноеЗначение = Неопределено Тогда
			Возврат;
		КонецЕсли;

		Если НачалоДня(ВыбранноеЗначение) <= НачалоДня(ТекущаяДата()) Тогда
			ПоказатьПредупреждение(, "Выбраная дата должна быть больше текущей!");
			Возврат;
		КонецЕсли; 
		
		СекундВСутках = 24*60*60;
		
		Объект.ИспользуетсяПо = ВыбранноеЗначение;
		КоличествоДнейИспользования = (Объект.ИспользуетсяПо - НачалоДня(ТекущаяДата())) / СекундВСутках;
		Элементы.КоличествоДнейИспользования.Заголовок = "Срок использования (" + Строка(КоличествоДнейИспользования) + " дн.)";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейИспользованияПриИзменении(Элемент)
	
	ОтобразитьДнейИспользования();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьДнейИспользования()
	
	Если КоличествоДнейИспользования = 0 Тогда
		Элементы.КоличествоДнейИспользования.Заголовок = "Используется бессрочно";
		Объект.ИспользуетсяПо = Дата("00010101");
	Иначе	
		Элементы.КоличествоДнейИспользования.Заголовок = "Срок использования (" + Строка(КоличествоДнейИспользования) + " дн.)";
		Объект.ИспользуетсяПо = НачалоДня(ТекущаяДата()) + КоличествоДнейИспользования * 24*60*60;
	КонецЕсли;	

КонецПроцедуры // ОтобразитьДнейИспользования()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобразитьДнейИспользования();
	УстановитьДоступностьПараметровИсточника();
	
КонецПроцедуры

&НаКлиенте
Процедура СценарииГотово(Команда)
	
	Отказ = Не ПроверитьЗаполнение();

КонецПроцедуры

&НаКлиенте
Процедура ИмяБазыПриИзменении(Элемент)
	
	Объект.БазаДанных = Объект.ИмяИБ;
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = Объект.ИмяИБ;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИмяБазыИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	// TODO: Проверка на только латинские

КонецПроцедуры




